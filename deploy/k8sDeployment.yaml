apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: springboot
  namespace: default
spec:
  replicas: 4
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - name: springboot
        image: springboot
        imagePullPolicy: Never
        resources:
          requests:
            cpu: "0.2"
          limits:
            cpu: "1"
        args:  [
          "--spring.cloud.config.uri=http://config-server:8888"
        ]
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 8080
            httpHeaders:
            - name: Content-Type
              value: application/hal+json
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 8080
            httpHeaders:
            - name: Content-Type
              value: application/hal+json
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: springboot
#   namespace: default
# spec:
#   selector:
#     app: springboot
#   ports:
#       - port: 8080
#   type: LoadBalancer
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   labels:
#     app: springboot
#   name: springboot
#   namespace: default
# spec:
#   backend:
#     serviceName: springboot
#     servicePort: 8080
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: springboot
#   namespace: default
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1beta1
#     kind: Deployment
#     name: springboot
#   minReplicas: 4
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 60